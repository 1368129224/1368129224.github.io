import{_ as t,W as r,X as n,Y as e,Z as h,$ as d,a2 as i,C as c}from"./framework-5910e262.js";const l={},o=i('<h1 id="nat类型简介" tabindex="-1"><a class="header-anchor" href="#nat类型简介" aria-hidden="true">#</a> NAT类型简介</h1><h2 id="_1-简介" tabindex="-1"><a class="header-anchor" href="#_1-简介" aria-hidden="true">#</a> 1. 简介</h2><p>网络地址转换，可以解决IPv4地址匮乏的问题，同时带有过滤的功能(防火墙)。</p><p>PS：在IPv4时代NAT是非常受欢迎的，但随着IPv6的来临，应尽量避免使用NAT，所需的安全(防火墙)等功能应采取其他措施解决。</p><h2 id="_2-术语" tabindex="-1"><a class="header-anchor" href="#_2-术语" aria-hidden="true">#</a> 2. 术语</h2><h3 id="_2-1-内部tuple" tabindex="-1"><a class="header-anchor" href="#_2-1-内部tuple" aria-hidden="true">#</a> 2.1 内部Tuple</h3><p>指内部主机的私有地址和端口号所构成的二元组，即内部主机所发送报文的源地址、端口所构成的二元组。</p><h3 id="_2-2-外部tuple" tabindex="-1"><a class="header-anchor" href="#_2-2-外部tuple" aria-hidden="true">#</a> 2.2 外部Tuple</h3><p>指内部Tuple经过NAT的源地址/端口转换之后，所获得的外部地址、端口所构成的二元组，即外部主机收到经NAT转换之后的报文时，它所看到的该报文的源地址（通常是NAT设备的地址）和源端口。</p><h3 id="_2-3-目标tuple" tabindex="-1"><a class="header-anchor" href="#_2-3-目标tuple" aria-hidden="true">#</a> 2.3 目标Tuple</h3><p>指外部主机的地址、端口所构成的二元组，即内部主机所发送报文的目标地址、端口所构成的二元组。</p><h3 id="_2-4-basic-nat-基本nat" tabindex="-1"><a class="header-anchor" href="#_2-4-basic-nat-基本nat" aria-hidden="true">#</a> 2.4 Basic NAT（基本NAT）</h3><p>只进行IP地址转换。在这种模式下，多台内部主机访问外部网络需要同等数量的公网IP地址，即需要一定数量的NAT地址池。</p><h3 id="_2-5-natp-网络地址-端口转换" tabindex="-1"><a class="header-anchor" href="#_2-5-natp-网络地址-端口转换" aria-hidden="true">#</a> 2.5 NATP（网络地址-端口转换）</h3><p>NATP是在狭义NAT的基础上增加对端口的转换。这种模式下多台内部主机可经由一个公网IP地址访问外部网络，目前家用宽带主要的NAT模式。</p><h2 id="_3-nat的类型" tabindex="-1"><a class="header-anchor" href="#_3-nat的类型" aria-hidden="true">#</a> 3. NAT的类型</h2><h3 id="_3-1-full-cone-nat-锥形nat" tabindex="-1"><a class="header-anchor" href="#_3-1-full-cone-nat-锥形nat" aria-hidden="true">#</a> 3.1 Full Cone NAT（锥形NAT）</h3><p>所有来自同一 个内部Tuple X的请求均被NAT转换至同一个外部Tuple Y，而不管这些请求是不是属于同一个应用或者是多个应用的。除此之外，当X-Y的转换关系建立之后，任意外部主机均可随时将Y中的地址和端口作为目标地址和目标端口，向内部主机发送UDP报文，由于对外部请求的来源无任何限制，因此这种方式虽然足够简单，但却不那么安全。（任意的外部主机/port都能和先前内部节点被映射的外部Tuple进行通信）</p><h3 id="_3-2-restricted-cone-nat-受限的锥形nat" tabindex="-1"><a class="header-anchor" href="#_3-2-restricted-cone-nat-受限的锥形nat" aria-hidden="true">#</a> 3.2 Restricted Cone NAT（受限的锥形NAT）</h3><p>它是Full Cone的受限版本：所有来自同一个内部Tuple X的请求均被NAT转换至同一个外部Tuple Y，这与Full Cone相同，但不同的是，只有当内部主机曾经发送过报文给外部主机（假设其IP地址为Z）后，外部主机才能以Y中的信息作为目标地址和目标端口，向内部主机发送UDP请求报文，这意味着，NAT设备只向内转发（目标地址/端口转换）那些来自于当前已知的外部主机的UDP报文，从而保障了外部请求来源的安全性。（IP相同，port随便，就能和先前内部节点被映射的外部Tuple进行通信）</p><h3 id="_3-3-port-restricted-cone-nat-严格限制的锥形nat" tabindex="-1"><a class="header-anchor" href="#_3-3-port-restricted-cone-nat-严格限制的锥形nat" aria-hidden="true">#</a> 3.3 Port Restricted Cone NAT（严格限制的锥形NAT）</h3><p>它是Restricted Cone NAT的进一步受限版。只有当内部主机曾经发送过报文给外部主机（假设其IP地址为Z且端口为P）之后，外部主机才能以Y中的信息作为目标地址和目标端 口，向内部主机发送UDP报文，同时，其请求报文的源端口必须为P，这一要求进一步强化了对外部报文请求来源的限制，从而较Restrictd Cone更具安全性 （ip,port都得一样；只能用先前内部节点被映射的外部Tuple与内部节点进行通信））</p><h3 id="_3-4-symmetric-nat-对称nat" tabindex="-1"><a class="header-anchor" href="#_3-4-symmetric-nat-对称nat" aria-hidden="true">#</a> 3.4 Symmetric NAT（对称NAT）</h3><p>在Cone NAT中，NAT转换映射关系仅与内部Tuple和外部Tuple相关，与目标Tuple无关。而在Symmetric NAT中，即使内部Tuple和外部Tuple相同，但目标Tuple不同，在此情况下将建立两条转换映射关系。此外，NAT的过滤方式与Port Restricted Cone相同。</p><hr>',25),s={href:"https://www.cnblogs.com/my_life/articles/1908552.html",target:"_blank",rel:"noopener noreferrer"};function p(T,_){const a=c("ExternalLinkIcon");return r(),n("div",null,[o,e("p",null,[e("a",s,[h("NAT的四种类型及类型检测 - bw_0927 - 博客园"),d(a)])])])}const N=t(l,[["render",p],["__file","NAT类型简介.html.vue"]]);export{N as default};
