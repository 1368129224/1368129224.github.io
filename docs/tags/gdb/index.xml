<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>GDB on 新泽雪冬</title>
        <link>https://blog.zooter.com.cn/tags/gdb/</link>
        <description>Recent content in GDB on 新泽雪冬</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <lastBuildDate>Wed, 16 Mar 2022 23:55:55 -0700</lastBuildDate><atom:link href="https://blog.zooter.com.cn/tags/gdb/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>GDB在线调试方法</title>
        <link>https://blog.zooter.com.cn/posts/gdb%E5%9C%A8%E7%BA%BF%E8%B0%83%E8%AF%95/</link>
        <pubDate>Wed, 16 Mar 2022 23:55:55 -0700</pubDate>
        
        <guid>https://blog.zooter.com.cn/posts/gdb%E5%9C%A8%E7%BA%BF%E8%B0%83%E8%AF%95/</guid>
        <description>&lt;h1 id=&#34;gdb在线调试方法&#34;&gt;GDB在线调试方法&lt;/h1&gt;
&lt;h2 id=&#34;1-获取gdb源码&#34;&gt;1. 获取GDB源码&lt;/h2&gt;
&lt;p&gt;为防止交叉编译工具自带的gdb和gdbserver需要额外运行库而加大搭建调试环境的难度，使用gdb源码编译生成gdb和gdbserver进行调试；为避免交叉编译工具不支持 &lt;em&gt;C++11&lt;/em&gt; 标准而导致编译报错，因此选择较老的版本，建议选择 &lt;strong&gt;gdb-7.12.1&lt;/strong&gt; 版本。
&lt;a class=&#34;link&#34; href=&#34;http://ftp.gnu.org/gnu/gdb/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;gdb源码下载地址&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;2-编译gdb&#34;&gt;2. 编译GDB&lt;/h2&gt;
&lt;p&gt;为方便编译可将交叉编译工具路径添加到临时环境变量中,例：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;PATH&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;/projects/hnd/tools/rtl/msdk-4.4.7-mips-EL-3.10-u0.9.33-m32t-140827/bin/:&lt;span class=&#34;nv&#34;&gt;$PATH&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;进入到 &lt;code&gt;gdb-7.12.1&lt;/code&gt; 目录下，使用对应平台的交叉编译工具在源码根目录下执行交叉编译gdb并安装：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;./configure --target&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;mips-linux --prefix&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;/home/lichenglong/gdbtest/install
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;make
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;make install
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;编译生成的gdb可执行文件在配置的install目录下。&lt;/p&gt;
&lt;h2 id=&#34;3-编译gdb-server&#34;&gt;3. 编译GDB server&lt;/h2&gt;
&lt;p&gt;进入到 &lt;code&gt;gdb/gdbserver&lt;/code&gt; 目录下，执行交叉编译gdbserver：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;./configure --target&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;mips-linux --host&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;mips-linux --prefix&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;/home/lichenglong/gdbtest/install
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;make
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;make install
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;编译生成的gdbserver在配置的install目录下。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;可能遇到的问题：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;编译 &lt;code&gt;linux-mips-low.c&lt;/code&gt; 报错 MMLO 宏未定义，使用 &lt;code&gt;grep -r MMLO *&lt;/code&gt; 命令查找宏在何处定义，发现是在其上级目录的 &lt;code&gt;mips-linux-tdep.h&lt;/code&gt; 中定义，添加头文件包含后编译即可通过。&lt;/p&gt;
&lt;h2 id=&#34;4-使用gdb进行调试&#34;&gt;4. 使用GDB进行调试&lt;/h2&gt;
&lt;h3 id=&#34;41-运行gdb-server&#34;&gt;4.1 运行GDB server&lt;/h3&gt;
&lt;p&gt;将gdbserver和要调试的可执行文件放到目标平台上(nfs、tftp)，执行命令运行：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;./gdbserver ip:port 目标文件
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;如果要调试的进程会由 &lt;code&gt;monitor&lt;/code&gt; 自动拉起，需要先让其停止运行，再使用gdbserver拉起。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.zooter.com.cn/posts/gdb%E5%9C%A8%E7%BA%BF%E8%B0%83%E8%AF%95/efe12be1ae4692e65d6d3e4f7a9b1453.png&#34;
	width=&#34;327&#34;
	height=&#34;119&#34;
	srcset=&#34;https://blog.zooter.com.cn/posts/gdb%E5%9C%A8%E7%BA%BF%E8%B0%83%E8%AF%95/efe12be1ae4692e65d6d3e4f7a9b1453_hu80fce0ca52577c3e758dd0b9f9d58023_63326_480x0_resize_box_3.png 480w, https://blog.zooter.com.cn/posts/gdb%E5%9C%A8%E7%BA%BF%E8%B0%83%E8%AF%95/efe12be1ae4692e65d6d3e4f7a9b1453_hu80fce0ca52577c3e758dd0b9f9d58023_63326_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;停止进程&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;274&#34;
		data-flex-basis=&#34;659px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;可能遇到的问题：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;运行gdbserver报错缺少运行库，如： libstdc++.so.6 。&lt;br&gt;
使用命令 &lt;code&gt;readelf -d gdbserver | grep NEEDED&lt;/code&gt; 显示gdbserver运行所依赖的库：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;~/gdbtest/gdb-7.12.1/gdb/gdbserver&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;$ readelf -d gdbserver&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; grep NEEDED
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; 0x00000001 &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;NEEDED&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;                     Shared library: &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;libdl.so.0&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; 0x00000001 &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;NEEDED&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;                     Shared library: &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;libstdc++.so.6&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; 0x00000001 &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;NEEDED&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;                     Shared library: &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;libm.so.0&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; 0x00000001 &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;NEEDED&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;                     Shared library: &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;libgcc_s.so.1&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; 0x00000001 &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;NEEDED&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;                     Shared library: &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;libc.so.0&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;在目标平台上查找必要的依赖库是否存在，若不存在则可以在交叉编译工具中查找相应的库文件，然后添加到目标平台中。&lt;/p&gt;
&lt;h3 id=&#34;42-vscode启动调试&#34;&gt;4.2 VSCode启动调试&lt;/h3&gt;
&lt;p&gt;在linux环境下运行VSCode（或者使用ssh远程连接）， &lt;strong&gt;确保VSCode所在的环境与目标平台能互相ping通&lt;/strong&gt; ，配置好 &lt;code&gt;launch.json&lt;/code&gt; ，要使用目标平台上gdbserver配套的gdb进行调试。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.zooter.com.cn/posts/gdb%E5%9C%A8%E7%BA%BF%E8%B0%83%E8%AF%95/3ff7f58d28dbb88194b49f077d5dd4dd.png&#34;
	width=&#34;384&#34;
	height=&#34;340&#34;
	srcset=&#34;https://blog.zooter.com.cn/posts/gdb%E5%9C%A8%E7%BA%BF%E8%B0%83%E8%AF%95/3ff7f58d28dbb88194b49f077d5dd4dd_hu1badae4a8c966b2669741c92170b6f79_154569_480x0_resize_box_3.png 480w, https://blog.zooter.com.cn/posts/gdb%E5%9C%A8%E7%BA%BF%E8%B0%83%E8%AF%95/3ff7f58d28dbb88194b49f077d5dd4dd_hu1badae4a8c966b2669741c92170b6f79_154569_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;launch.json&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;112&#34;
		data-flex-basis=&#34;271px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;点击 &lt;code&gt;启动调试&lt;/code&gt; ，即可连接到目标平台运行程序。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.zooter.com.cn/posts/gdb%E5%9C%A8%E7%BA%BF%E8%B0%83%E8%AF%95/ec19884a329f63a2b6ce29a0b431123a.png&#34;
	width=&#34;356&#34;
	height=&#34;115&#34;
	srcset=&#34;https://blog.zooter.com.cn/posts/gdb%E5%9C%A8%E7%BA%BF%E8%B0%83%E8%AF%95/ec19884a329f63a2b6ce29a0b431123a_hu35acb0dccf8aec5c9887f30b05ef4584_34995_480x0_resize_box_3.png 480w, https://blog.zooter.com.cn/posts/gdb%E5%9C%A8%E7%BA%BF%E8%B0%83%E8%AF%95/ec19884a329f63a2b6ce29a0b431123a_hu35acb0dccf8aec5c9887f30b05ef4584_34995_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;点击启动调试.png&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;309&#34;
		data-flex-basis=&#34;742px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;建议先在代码中打上 &lt;strong&gt;断点&lt;/strong&gt; ，避免开始调试后直接就运行过了需要调试的代码部分。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.zooter.com.cn/posts/gdb%E5%9C%A8%E7%BA%BF%E8%B0%83%E8%AF%95/96c6bd3ef82f3475845e75ea1a8d25b7.png&#34;
	width=&#34;1255&#34;
	height=&#34;768&#34;
	srcset=&#34;https://blog.zooter.com.cn/posts/gdb%E5%9C%A8%E7%BA%BF%E8%B0%83%E8%AF%95/96c6bd3ef82f3475845e75ea1a8d25b7_huf0ec03eafa308ae22551d4c8e806f799_705505_480x0_resize_box_3.png 480w, https://blog.zooter.com.cn/posts/gdb%E5%9C%A8%E7%BA%BF%E8%B0%83%E8%AF%95/96c6bd3ef82f3475845e75ea1a8d25b7_huf0ec03eafa308ae22551d4c8e806f799_705505_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;调试过程.png&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;163&#34;
		data-flex-basis=&#34;392px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;可能遇到的问题：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;程序直接运行完，断点不生效，可能是编译程序的时候没有加 &lt;strong&gt;-g&lt;/strong&gt; 参数。&lt;/p&gt;
&lt;h2 id=&#34;5-调试问题处理&#34;&gt;5. 调试问题处理&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;GDB无法加载源码&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;使用gdb打开目标文件，输入 &lt;code&gt;l&lt;/code&gt; ，如果打印 &lt;code&gt;No symbol table is loaded. Use the “file” command.&lt;/code&gt; ， 则说明目标文件没有调试信息，需要增加 &lt;code&gt;-g&lt;/code&gt; 编译选项重新编译(可在 &lt;code&gt;makefile.common&lt;/code&gt; 的 &lt;code&gt;CFLAGS&lt;/code&gt; 后添加)。如果加了 &lt;code&gt;-g&lt;/code&gt; 仍然没有调试信息，注意看看Makefile中有没有加 &lt;code&gt;strip&lt;/code&gt; 命令及其对应的宏，该命令会去掉可执行文件中的调试信息。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使用命令 &lt;code&gt;readelf 目标文件 -p .debug_str&lt;/code&gt; ，会打印出源码路径：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ readelf netctrl.out -p .debug_str
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;String dump of section &lt;span class=&#34;s1&#34;&gt;&amp;#39;.debug_str&amp;#39;&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;     0&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;  swan_num
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;     9&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;  sin6_family
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;    15&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;  MULTIWAN_IE_BUTT
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;    26&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;  WLAN_5G_2
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;......
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;   939&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;  /work/lichenglong/MESH-ITB01/prod/agent/netctrl
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;......
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;  c185&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;  upgrade_default_cfg
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;  c199&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;  key_byte
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;  c1a2&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;  crypt_decrypt_rc4
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;  c1b4&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;  key_data
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;在 &lt;code&gt;launch.json&lt;/code&gt; 修改源码路径，如 &lt;a class=&#34;link&#34; href=&#34;#42-vscode%e5%90%af%e5%8a%a8%e8%b0%83%e8%af%95&#34; &gt;launch.json&lt;/a&gt; 所示。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;博通方案启动调试异常&lt;/p&gt;
&lt;p&gt;VSCode启动调试报错：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Loaded &amp;#39;target:/lib/ld-linux.so.3&amp;#39;. Symbols loaded.
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ERROR: Unable to start debugging. Unrecognized format of field &amp;#34;level&amp;#34; in result: {level=-1,addr=0xb6fceb00,func=_start,args=[],from=target:/lib/ld-linux.so.3}
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;The program &amp;#39;/home/licl/Desktop/bcm/a.out&amp;#39; has exited with code 42 (0x0000002a).
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;命令行运行gdb报错：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Remote &amp;#39;g&amp;#39; packet reply is too long: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b0feffbe0000000000ebfcb61000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000xb6fceb00 in _start () from target:/lib/ld-linux.so.3
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;解决办法：&lt;/p&gt;
&lt;p&gt;通过搜索，原因是gdb在远程调试时，因为寄存器大小的切换，导致gdb出现的bug。修改gdb源码 &lt;code&gt;remote.c&lt;/code&gt;，重新编译gdb即可解决，修改内容如下所示：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-patch&#34; data-lang=&#34;patch&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/* Further sanity checks, with knowledge of the architecture.  */
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gd&#34;&gt;-  if (buf_len &amp;gt; 2 * rsa-&amp;gt;sizeof_g_packet)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gd&#34;&gt;-    error (_(&amp;#34;Remote &amp;#39;g&amp;#39; packet reply is too long: %s&amp;#34;), rs-&amp;gt;buf);
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gd&#34;&gt;&lt;/span&gt;&lt;span class=&#34;gi&#34;&gt;+  //if (buf_len &amp;gt; 2 * rsa-&amp;gt;sizeof_g_packet)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gi&#34;&gt;+  //  error (_(&amp;#34;Remote &amp;#39;g&amp;#39; packet reply is too long: %s&amp;#34;), rs-&amp;gt;buf);
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gi&#34;&gt;+
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gi&#34;&gt;+    if(buf_len &amp;gt; 2 * rsa-&amp;gt;sizeof_g_packet) {
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gi&#34;&gt;+        rsa-&amp;gt;sizeof_g_packet = buf_len;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gi&#34;&gt;+        for(i = 0; i &amp;lt; gdbarch_num_regs(gdbarch); i++){
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gi&#34;&gt;+            if(rsa-&amp;gt;regs-&amp;gt;pnum == -1)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gi&#34;&gt;+               continue;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gi&#34;&gt;+            if(rsa-&amp;gt;regs-&amp;gt;offset &amp;gt;= rsa-&amp;gt;sizeof_g_packet)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gi&#34;&gt;+               rsa-&amp;gt;regs-&amp;gt;in_g_packet = 0;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gi&#34;&gt;+            else
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gi&#34;&gt;+               rsa-&amp;gt;regs-&amp;gt;in_g_packet = 1;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gi&#34;&gt;+        }
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gi&#34;&gt;+    }
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
        </item>
        
    </channel>
</rss>
